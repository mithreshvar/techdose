class Solution {
    vector<int> dp;
public:
    int returnCatalan(int n)
    {
        if (this->dp[n] != -1)
            return this->dp[n];
        if (n == 0 || n == 1){
            this->dp[n] = 1;
            return 1;
        }
        int catalan = 0;
        
        for (int i = 0; i < n; i++)
        {
            catalan += returnCatalan(i) * returnCatalan(n - i - 1);
        }
        this->dp[n] = catalan;
        return catalan;
    }
    int numTrees(int n) {
        this->dp.resize(n + 1, -1);
        for (int i = 0; i <= n; i++)
        {
            returnCatalan(i);
        }
        return dp[n];
    }
};
